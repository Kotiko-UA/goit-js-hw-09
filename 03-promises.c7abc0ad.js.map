{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAkBC,G,kBASd,IAAIC,EAAWC,EAAI,EACfC,EAAQC,EAEZC,QAAQC,IAAIH,GAEZI,YAAW,YAUf,SAAuBN,EAAUE,GAC/B,IAAMK,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQlB,EAAAoB,OAAOC,QAAQ,uBAAwCC,OAAff,EAAS,QAAYe,OAANb,EAAM,QAEnEU,EAAKnB,EAAAoB,OAAOG,QAAQ,sBAAqCD,OAAff,EAAS,QAAYe,OAANb,EAAM,O,KAhBjEe,CAAcjB,EAAUE,GACrBgB,MAAK,WAAM,IACXC,OAAM,WAAM,G,GACdjB,GAEHC,GAAgBiB,OAAOC,E,EAnBzBtB,EAAEuB,iBAOF,IALA,IAAMC,EAAaxB,EAAEyB,cAAcC,SAASvB,MAAMwB,MAC5CL,EAAOtB,EAAEyB,cAAcC,SAASJ,KAAKK,MACrCC,EAAS5B,EAAEyB,cAAcC,SAASE,OAAOD,MAC3CvB,EAAeiB,OAAOG,GAEjBK,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onSubmit);\n\nfunction onSubmit(e) {\n  e.preventDefault();\n\n  const firstDelay = e.currentTarget.elements.delay.value;\n  const step = e.currentTarget.elements.step.value;\n  const amount = e.currentTarget.elements.amount.value;\n  let currentDelay = Number(firstDelay);\n\n  for (let i = 0; i < amount; i += 1) {\n    let position = i + 1;\n    let delay = currentDelay;\n\n    console.log(delay);\n\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then(() => {})\n        .catch(() => {});\n    }, delay);\n\n    currentDelay += Number(step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`));\n    } else {\n      reject(Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`));\n    }\n  });\n}\n"],"names":["$h6c0i","parcelRequire","form","document","querySelector","addEventListener","e","position","i","delay","currentDelay","console","log","setTimeout","shouldResolve","Math","random","Promise","resolve","reject","Notify","success","concat","failure","$ce04d3a99e08e73b$var$createPromise","then","catch","Number","step","preventDefault","firstDelay","currentTarget","elements","value","amount","i1","_loop"],"version":3,"file":"03-promises.c7abc0ad.js.map"}